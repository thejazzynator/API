// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicAPI.DataBase;

#nullable disable

namespace MusicAPI.Migrations
{
    [DbContext(typeof(DBHelper))]
    [Migration("20221004044632_mymigrationtry")]
    partial class mymigrationtry
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("API.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Singer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Song")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("API.Models.Albums", b =>
                {
                    b.Property<string>("AlbumOne")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("AlbumOne");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("API.Models.Albums", b =>
                {
                    b.HasOne("API.Artist", null)
                        .WithMany("Album")
                        .HasForeignKey("ArtistId");
                });

            modelBuilder.Entity("API.Artist", b =>
                {
                    b.Navigation("Album");
                });
#pragma warning restore 612, 618
        }
    }
}
